{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Desktop\\\\Git Uploads\\\\Faculty-Registration\\\\frontend\\\\src\\\\components\\\\Course\\\\CourseDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CourseService from '../../services/CourseService';\nimport EmployeeService from '../../services/EmployeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseDetails = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [assignment, setAssignment] = useState({\n    courseId: '',\n    employeeId: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const coursesResponse = await CourseService.getAllCourses();\n        const employeesResponse = await EmployeeService.getAllEmployees();\n        setCourses(coursesResponse.data);\n        setEmployees(employeesResponse.data);\n      } catch (error) {\n        console.error(error);\n        alert('Failed to fetch data.');\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAssignmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAssignment({\n      ...assignment,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await CourseService.assignCourseToEmployee(assignment.courseId, assignment.employeeId);\n      alert('Course assigned successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to assign course.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        name: \"courseId\",\n        value: assignment.courseId,\n        onChange: handleAssignmentChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), courses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: course.courseId,\n          children: course.courseName\n        }, course.courseId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        name: \"employeeId\",\n        value: assignment.employeeId,\n        onChange: handleAssignmentChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: employee.employeeId,\n          children: [employee.firstName, \" \", employee.lastName]\n        }, employee.employeeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Assign Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseDetails, \"/DOFTK5a3lyFx7VLE7kPlI2wVSk=\");\n_c = CourseDetails;\nexport default CourseDetails;\nvar _c;\n$RefreshReg$(_c, \"CourseDetails\");","map":{"version":3,"names":["React","useEffect","useState","CourseService","EmployeeService","jsxDEV","_jsxDEV","CourseDetails","_s","courses","setCourses","employees","setEmployees","assignment","setAssignment","courseId","employeeId","fetchData","coursesResponse","getAllCourses","employeesResponse","getAllEmployees","data","error","console","alert","handleAssignmentChange","e","name","value","target","handleSubmit","preventDefault","assignCourseToEmployee","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","map","course","courseName","employee","firstName","lastName","type","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Desktop/Git Uploads/Faculty-Registration/frontend/src/components/Course/CourseDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CourseService from '../../services/CourseService';\r\nimport EmployeeService from '../../services/EmployeeService';\r\n\r\nconst CourseDetails = () => {\r\n    const [courses, setCourses] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [assignment, setAssignment] = useState({\r\n        courseId: '',\r\n        employeeId: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const coursesResponse = await CourseService.getAllCourses();\r\n                const employeesResponse = await EmployeeService.getAllEmployees();\r\n                setCourses(coursesResponse.data);\r\n                setEmployees(employeesResponse.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                alert('Failed to fetch data.');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleAssignmentChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAssignment({ ...assignment, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await CourseService.assignCourseToEmployee(assignment.courseId, assignment.employeeId);\r\n            alert('Course assigned successfully!');\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert('Failed to assign course.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"mt-4\">\r\n            <div className=\"mb-3\">\r\n                <label>Course</label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"courseId\"\r\n                    value={assignment.courseId}\r\n                    onChange={handleAssignmentChange}\r\n                    required\r\n                >\r\n                    <option value=\"\">Select a course</option>\r\n                    {courses.map((course) => (\r\n                        <option key={course.courseId} value={course.courseId}>\r\n                            {course.courseName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label>Employee</label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"employeeId\"\r\n                    value={assignment.employeeId}\r\n                    onChange={handleAssignmentChange}\r\n                    required\r\n                >\r\n                    <option value=\"\">Select an employee</option>\r\n                    {employees.map((employee) => (\r\n                        <option key={employee.employeeId} value={employee.employeeId}>\r\n                            {employee.firstName} {employee.lastName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n                Assign Course\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CourseDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}