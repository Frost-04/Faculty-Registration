{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Desktop\\\\FacultyRegistration_ESD_Project\\\\frontend\\\\src\\\\components\\\\Department\\\\DepartmentDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DepartmentService from '../services/DepartmentService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentDropdown = ({\n  value,\n  onChange\n}) => {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await DepartmentService.getAllDepartments();\n        setDepartments(response.data);\n      } catch (error) {\n        console.error(error);\n        alert('Failed to fetch departments.');\n      }\n    };\n    fetchDepartments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      value: value,\n      onChange: e => onChange(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: department.deptId,\n        children: department.deptName\n      }, department.deptId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(DepartmentDropdown, \"SfpP6hNiRXTltxSEo0gT7wEMq08=\");\n_c = DepartmentDropdown;\nexport default DepartmentDropdown;\nvar _c;\n$RefreshReg$(_c, \"DepartmentDropdown\");","map":{"version":3,"names":["React","useEffect","useState","DepartmentService","jsxDEV","_jsxDEV","DepartmentDropdown","value","onChange","_s","departments","setDepartments","fetchDepartments","response","getAllDepartments","data","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","e","target","required","map","department","deptId","deptName","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Desktop/FacultyRegistration_ESD_Project/frontend/src/components/Department/DepartmentDropdown.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport DepartmentService from '../services/DepartmentService';\r\n\r\nconst DepartmentDropdown = ({ value, onChange }) => {\r\n    const [departments, setDepartments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchDepartments = async () => {\r\n            try {\r\n                const response = await DepartmentService.getAllDepartments();\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n                alert('Failed to fetch departments.');\r\n            }\r\n        };\r\n\r\n        fetchDepartments();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <label>Department</label>\r\n            <select\r\n                className=\"form-control\"\r\n                value={value}\r\n                onChange={(e) => onChange(e.target.value)}\r\n                required\r\n            >\r\n                <option value=\"\">Select a department</option>\r\n                {departments.map((department) => (\r\n                    <option key={department.deptId} value={department.deptId}>\r\n                        {department.deptName}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,iBAAiB,CAACW,iBAAiB,CAAC,CAAC;QAC5DH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBE,KAAK,CAAC,8BAA8B,CAAC;MACzC;IACJ,CAAC;IAEDN,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBlB,OAAA;MACImB,SAAS,EAAC,cAAc;MACxBjB,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAGiB,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACnB,KAAK,CAAE;MAC1CoB,QAAQ;MAAAR,QAAA,gBAERd,OAAA;QAAQE,KAAK,EAAC,EAAE;QAAAY,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5Cb,WAAW,CAACkB,GAAG,CAAEC,UAAU,iBACxBxB,OAAA;QAAgCE,KAAK,EAAEsB,UAAU,CAACC,MAAO;QAAAX,QAAA,EACpDU,UAAU,CAACE;MAAQ,GADXF,UAAU,CAACC,MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACd,EAAA,CAnCIH,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAqCxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}